{
    "annotations": {
      "list": [
        {
          "builtIn": 1,
          "datasource": "-- Grafana --",
          "enable": true,
          "hide": true,
          "iconColor": "rgba(0, 211, 255, 1)",
          "name": "Annotations & Alerts",
          "target": {
            "limit": 100,
            "matchAny": false,
            "tags": [],
            "type": "dashboard"
          },
          "type": "dashboard"
        }
      ]
    },
    "editable": true,
    "fiscalYearStartMonth": 0,
    "graphTooltip": 0,
    "id": 3,
    "links": [],
    "liveNow": false,
    "panels": [
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "MBs"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 0,
          "y": 0
        },
        "id": 22,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true,
          "text": {}
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"internet_speed\")\n  |> filter(fn: (r) => r[\"_field\"] == \"upload\")\n  |> filter(fn: (r) => r[\"host\"] == \"f8f44f754b32\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Upload Speed",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "max": 15,
            "min": 0,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 10
                }
              ]
            },
            "unit": "ms"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 4,
          "y": 0
        },
        "id": 16,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\" or r[\"_measurement\"] == \"ping_google\")\n  |> filter(fn: (r) => r[\"_field\"] == \"average_response_ms\")\n  |> filter(fn: (r) => r[\"host\"] == \"f8f44f754b32\")\n  |> filter(fn: (r) => r[\"url\"] == \"8.8.8.8\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Google ICMP - Latency",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                }
              ]
            },
            "unit": "MBs"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 4,
          "w": 4,
          "x": 8,
          "y": 0
        },
        "id": 20,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"internet_speed\")\n  |> filter(fn: (r) => r[\"_field\"] == \"download\")\n  |> filter(fn: (r) => r[\"host\"] == \"f8f44f754b32\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Download Speed",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "decimals": 2,
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "usage_percent {com.docker.compose.config-hash=\"68f524311bb1e8566e22f410e0479e6a14f240eaefb4a4d3d8ab86e45f72267c\", com.docker.compose.container-number=\"1\", com.docker.compose.depends_on=\"influxdb:service_started:false\", com.docker.compose.image=\"sha256:66652284b4ef91f671ec0a568d6538a58738b88d596245df9e3827205b58c3a6\", com.docker.compose.oneoff=\"False\", com.docker.compose.project=\"telegraf_grafana_influx\", com.docker.compose.project.config_files=\"/home/chung.tran/repositories/telegraf_grafana_influx/docker-compose.yml\", com.docker.compose.project.working_dir=\"/home/chung.tran/repositories/telegraf_grafana_influx\", com.docker.compose.service=\"grafana\", com.docker.compose.version=\"2.26.1\", container_image=\"grafana/grafana-enterprise\", container_name=\"dsig-grafana\", container_status=\"running\", container_version=\"8.4.4\", cpu=\"cpu-total\", engine_host=\"ISHP-TestingDevelopment-chung.tran-002601.ishp.cgi.com\", host=\"f8f44f754b32\", server_version=\"26.0.1\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Grafana"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "usage_percent {com.docker.compose.config-hash=\"bb23a578e9044b5f6556c2cd7ced6117d447686826c30816db3e0d67fe0f4a27\", com.docker.compose.container-number=\"1\", com.docker.compose.image=\"sha256:0d8d6b98c43fff28fa273a04867b51e3df2a916ab11831bbe62ff940414af6c8\", com.docker.compose.oneoff=\"False\", com.docker.compose.project=\"telegraf_grafana_influx\", com.docker.compose.project.config_files=\"/home/chung.tran/repositories/telegraf_grafana_influx/docker-compose.yml\", com.docker.compose.project.working_dir=\"/home/chung.tran/repositories/telegraf_grafana_influx\", com.docker.compose.service=\"influxdb\", com.docker.compose.version=\"2.26.1\", container_image=\"influxdb\", container_name=\"dsig-influx\", container_status=\"running\", container_version=\"2.1.1\", cpu=\"cpu-total\", engine_host=\"ISHP-TestingDevelopment-chung.tran-002601.ishp.cgi.com\", host=\"f8f44f754b32\", server_version=\"26.0.1\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Telgraf"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "usage_percent {com.docker.compose.config-hash=\"d3a1c72a5de9f80e0da72b0babb0b9728108f747c2ea91fd9e971282df970e97\", com.docker.compose.container-number=\"1\", com.docker.compose.depends_on=\"influxdb:service_started:false\", com.docker.compose.image=\"sha256:b47578639029f990842ac7ec9661fea3c480cabe2283d347e1204a7bf566e42a\", com.docker.compose.oneoff=\"False\", com.docker.compose.project=\"telegraf_grafana_influx\", com.docker.compose.project.config_files=\"/home/chung.tran/repositories/telegraf_grafana_influx/docker-compose.yml\", com.docker.compose.project.working_dir=\"/home/chung.tran/repositories/telegraf_grafana_influx\", com.docker.compose.service=\"telegraf\", com.docker.compose.version=\"2.26.1\", container_image=\"telegraf\", container_name=\"dsig-telegraf\", container_status=\"running\", container_version=\"1.24\", cpu=\"cpu-total\", engine_host=\"ISHP-TestingDevelopment-chung.tran-002601.ishp.cgi.com\", host=\"f8f44f754b32\", server_version=\"26.0.1\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "Influx"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 12,
          "y": 0
        },
        "id": 14,
        "options": {
          "displayMode": "lcd",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"docker_container_cpu\")\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_percent\")\n  |> filter(fn: (r) => r[\"com.docker.compose.config-hash\"] == \"68f524311bb1e8566e22f410e0479e6a14f240eaefb4a4d3d8ab86e45f72267c\" or r[\"com.docker.compose.config-hash\"] == \"bb23a578e9044b5f6556c2cd7ced6117d447686826c30816db3e0d67fe0f4a27\" or r[\"com.docker.compose.config-hash\"] == \"d3a1c72a5de9f80e0da72b0babb0b9728108f747c2ea91fd9e971282df970e97\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Docker - visualization stack CPU Usage",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-purples"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": ""
                }
              ]
            },
            "unit": "hrs"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 0,
          "y": 4
        },
        "id": 10,
        "options": {
          "colorMode": "value",
          "graphMode": "none",
          "justifyMode": "auto",
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "last"
            ],
            "fields": "",
            "values": false
          },
          "text": {
            "titleSize": 1
          },
          "textMode": "value"
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"docker_container_status\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"uptime_ns\")\r\n  |> filter(fn: (r) => r[\"com.docker.compose.config-hash\"] == \"68f524311bb1e8566e22f410e0479e6a14f240eaefb4a4d3d8ab86e45f72267c\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> toFloat()\r\n  |> map(fn: (r) => ({r with _value: r._value / 1000000000.0}))\r\n    |> map(fn: (r) => ({r with _value: r._value / 3600.0}))\r\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Total Uptime",
        "type": "stat"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "thresholds"
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 5,
          "w": 6,
          "x": 6,
          "y": 4
        },
        "id": 8,
        "options": {
          "orientation": "auto",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showThresholdLabels": false,
          "showThresholdMarkers": true
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
            "refId": "A"
          }
        ],
        "title": "Total CPU Usage",
        "type": "gauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "continuous-GrYlRd"
            },
            "mappings": [],
            "thresholds": {
              "mode": "percentage",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 5
                }
              ]
            },
            "unit": "percent"
          },
          "overrides": [
            {
              "matcher": {
                "id": "byName",
                "options": "usage_system {cpu=\"cpu0\", host=\"f8f44f754b32\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "cpu0"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "usage_system {cpu=\"cpu1\", host=\"f8f44f754b32\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "cpu1"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "usage_system {cpu=\"cpu2\", host=\"f8f44f754b32\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "cpu2"
                }
              ]
            },
            {
              "matcher": {
                "id": "byName",
                "options": "usage_system {cpu=\"cpu3\", host=\"f8f44f754b32\"}"
              },
              "properties": [
                {
                  "id": "displayName",
                  "value": "cpu3"
                }
              ]
            }
          ]
        },
        "gridPos": {
          "h": 9,
          "w": 12,
          "x": 12,
          "y": 8
        },
        "id": 4,
        "options": {
          "displayMode": "lcd",
          "orientation": "horizontal",
          "reduceOptions": {
            "calcs": [
              "lastNotNull"
            ],
            "fields": "",
            "values": false
          },
          "showUnfilled": true,
          "text": {
            "titleSize": 25
          }
        },
        "pluginVersion": "8.4.4",
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_system\")\r\n  |> filter(fn: (r) => r[\"cpu\"] == \"cpu0\" or r[\"cpu\"] == \"cpu1\" or r[\"cpu\"] == \"cpu2\" or r[\"cpu\"] == \"cpu3\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"f8f44f754b32\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\r\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "CPU usage by core",
        "type": "bargauge"
      },
      {
        "datasource": {
          "type": "influxdb",
          "uid": "P951FEA4DE68E13C5"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 91,
              "gradientMode": "opacity",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "line"
              }
            },
            "mappings": [],
            "max": 8000000000,
            "min": -1,
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "#C4162A",
                  "value": 6999999999.9998
                }
              ]
            },
            "unit": "decgbytes"
          },
          "overrides": []
        },
        "gridPos": {
          "h": 8,
          "w": 12,
          "x": 0,
          "y": 9
        },
        "id": 12,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "influxdb",
              "uid": "P951FEA4DE68E13C5"
            },
            "query": "from(bucket: \"mybucket\")\n  |> range(start: -5m)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\")\n  |> filter(fn: (r) => r[\"_field\"] == \"used\")\n  |> filter(fn: (r) => r[\"host\"] == \"f8f44f754b32\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
            "refId": "A"
          }
        ],
        "title": "Ram - Usage",
        "type": "timeseries"
      },
      {
        "datasource": {
          "type": "datasource",
          "uid": "grafana"
        },
        "fieldConfig": {
          "defaults": {
            "color": {
              "mode": "palette-classic"
            },
            "custom": {
              "axisLabel": "",
              "axisPlacement": "auto",
              "barAlignment": 0,
              "drawStyle": "line",
              "fillOpacity": 0,
              "gradientMode": "none",
              "hideFrom": {
                "legend": false,
                "tooltip": false,
                "viz": false
              },
              "lineInterpolation": "linear",
              "lineWidth": 1,
              "pointSize": 5,
              "scaleDistribution": {
                "type": "linear"
              },
              "showPoints": "auto",
              "spanNulls": false,
              "stacking": {
                "group": "A",
                "mode": "none"
              },
              "thresholdsStyle": {
                "mode": "off"
              }
            },
            "mappings": [],
            "thresholds": {
              "mode": "absolute",
              "steps": [
                {
                  "color": "green",
                  "value": null
                },
                {
                  "color": "red",
                  "value": 80
                }
              ]
            }
          },
          "overrides": []
        },
        "gridPos": {
          "h": 6,
          "w": 24,
          "x": 0,
          "y": 17
        },
        "id": 2,
        "options": {
          "legend": {
            "calcs": [],
            "displayMode": "list",
            "placement": "bottom"
          },
          "tooltip": {
            "mode": "single",
            "sort": "none"
          }
        },
        "targets": [
          {
            "datasource": {
              "type": "datasource",
              "uid": "grafana"
            },
            "queryType": "randomWalk",
            "refId": "A"
          }
        ],
        "title": "Random Walk",
        "type": "timeseries"
      }
    ],
    "refresh": "5s",
    "schemaVersion": 35,
    "style": "dark",
    "tags": [],
    "templating": {
      "list": []
    },
    "time": {
      "from": "now-5m",
      "to": "now"
    },
    "timepicker": {
      "refresh_intervals": [
        "5s",
        "10s",
        "30s",
        "1m",
        "5m",
        "15m",
        "30m",
        "1h",
        "2h",
        "1d"
      ]
    },
    "timezone": "",
    "title": "Dashboard",
    "uid": "AY7xKD-Iz",
    "version": 4,
    "weekStart": ""
  }